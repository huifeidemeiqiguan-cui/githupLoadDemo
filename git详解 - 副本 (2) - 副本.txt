（1）什么是版本控制（http://blog.a0z.me/2014/05/21/GitBeginning/）
	我们来看一个例子：假设大四毕业生小张在写毕业论文，写好初稿后经常删改，甚至还会在第二天把前一天删掉的东西找回来。如果他动点脑子，
	就不会只在一个文档中改来改去，而会在文件夹中有：

		毕业论文_初稿.doc
		毕业论文_修改1.doc
		毕业论文_修改2.doc
		毕业论文_修改3.doc
		毕业论文_完整版1.doc
		毕业论文_完整版2.doc
		毕业论文_完整版3.doc
		毕业论文_最终版1.doc
		毕业论文_最终版2.doc
		……

		看起来是不是很郁闷啊？小张当然也郁闷了，因为自己总是改不好，所以他把自己的论文发给女朋友（是学霸），求帮忙；与此同时他自己也在继续修改。第二天就有了：

		毕业论文_最终版3.doc
		毕业论文_女友版1.doc		
		他女友毕竟是学霸，当然给他的论文做了比较大的修改，此时小张虽然看到了希望，但还要纠结着做一件事情：把上面两个版本的论文合并成：

		毕业论文_死也不改版.doc
		等合并好，已是凌晨三点半。小张无比怨念：这样子真是没法和女友开心的玩耍了呢！怎么办？
		小张想，如果能有个什么东西来帮忙控制一下这该死的版本，那真是谢天谢地了！就像这样：

		版本    修改人	  说明	    日期
		-----------------------------------
		初稿	小张	这是初稿	Day1
		修改1	小张	修改目录	Day2
		修改2	小张	合并段落	Day3
		 ……	     ……	       ……	     ……
		最终版2	小张	xxx	        Day7
		死不改版 女友	bala	    Day8
		
		这样就不用手动控制那么多版本啦！所以，所谓“版本控制系统”，就是来解决这类问题的。